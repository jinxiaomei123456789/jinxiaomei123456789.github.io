<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小生の博客</title>
  
  <subtitle>踏实努力地工作，踏实努力地学习</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-20T05:58:49.573Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>小生</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/04/20/docker/"/>
    <id>http://yoursite.com/2019/04/20/docker/</id>
    <published>2019-04-20T02:05:48.910Z</published>
    <updated>2019-04-20T05:58:49.573Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title: docker<br>date: 2019-04-20 10:05:48</p><h2 id="tags-docker"><a href="#tags-docker" class="headerlink" title="tags: docker"></a>tags: docker</h2><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>&emsp;&emsp;docker是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译通过的容器可以批量地在生产环境中部署，包括VMware（虚拟机）、bare metal、OpenStack集群和其他的基础应用平台。 </p><h2 id="docker的三个基本概念"><a href="#docker的三个基本概念" class="headerlink" title="docker的三个基本概念"></a>docker的三个基本概念</h2><p>&emsp;&emsp;1.镜像(Image)<br>&emsp;&emsp;2.容器(Container)<br>&emsp;&emsp;3.仓库(Repository)</p><h3 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h3><p>docker镜像就是一个只读的模板，如：一个镜像可以包含一个完整的ubuntu操作系统环境，里面仅安装了Apache或者用户需要的其他应用程序；docker镜像可以用来创建docker容器；docker提供了一个很简单的机制来创建镜像或者更新现有的镜像，用户甚至可以直接从其他人那里下载一个已经做好的镜像来直接使用。简而言之，docker镜像就相当于我们平常安装Ubuntu系统时需要下载的ISO文件。 </p><h3 id="docker容器"><a href="#docker容器" class="headerlink" title="docker容器"></a>docker容器</h3><p>&emsp;&emsp;docker利用容器来运行应用，容器是从镜像创建的运行实例，它可以被启动、开始、停止、删除。每个容器都是相互隔离的、保证安全的平台。可以把容器看做是一个简易版的LInux环境（包括root用户权限、进程空间、用户空间和网络空间等）和运行在其中的应用程序。可以理解为已经创建好的具有界面的windows操作系统。</p><h3 id="docker仓库"><a href="#docker仓库" class="headerlink" title="docker仓库"></a>docker仓库</h3><p>&emsp;&emsp;仓库是集中存放镜像文件的场所，有时候会把仓库和仓库注册服务器（Registry）混为一谈，并不严格区分。实际上，仓库注册服务器上往往存放着多个仓库，每个仓库中又包含了多个镜像，每个镜像有不同的标签（tag）。<br>&emsp;&emsp;仓库分为公开仓库（public）和私有仓库（private）两种形式，最大的公开仓库是docker hub，存放了数量庞大的镜像供用户下载，国内的公开仓库包括docker pool，可以提供大陆用户更稳定快速的访问。<br>&emsp;&emsp;用户也可以在本地网络内创建一个私有仓库，当用户创建了自己的镜像之后可以使用push命令将它上传到公有或者私有仓库，这样下次在另外一台机器上使用这个镜像的时候，只需要从仓库上pull下来就可以了。</p><h1 id="docker优点"><a href="#docker优点" class="headerlink" title="docker优点"></a>docker优点</h1><p>&emsp;&emsp;1.docker是轻量级的、传统的物理机和虚拟机都太重型了，在互联网尤其是移动互联网时代，是特别讲究强调软件作为轻型服务发布，而docker正好满足这种需求；<br>&emsp;&emsp;2.docker的scale out能力是物理机和虚拟机所不具备的，而且container相对于物理机和虚拟机管理更方便；<br>&emsp;&emsp;3.docker作为lxc（linux constainerlinux容器）的管理器，封装了lxc的技术细节，将容器技术的使用门槛降低了，这是很多创业公司看中的，可以快速见到产品的效果；<br>&emsp;&emsp;4. docker开源技术的生态也越来越好，系统层面，ubuntu、centos、redhat、suse、windows、mac os都支持运行docker，这意味着应用容器可以直接在这些平台上迁移。</p><h1 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h1><p>&emsp;&emsp;首先准备一个centos7的环境，centos7已经搭建好了docker相关的依赖关系，我们只需要直接安装，而centos6还需要安装一些依赖包。<br>&emsp;&emsp;centos7下载以及配置方法参考：<a href="https://blog.csdn.net/reticent_man/article/details/80732395" target="_blank" rel="noopener">https://blog.csdn.net/reticent_man/article/details/80732395</a><br>&emsp;&emsp;下载完成后使用<code>yum install docker</code>安装docker包，在此过程中出现问题<code>“another app is currently holding the yum lock”</code>，一直循环输出这段话，提示yum被锁定，解决方法就是kill锁定yum的进程，输入<code>kill -s 9 pid（</code>锁定的进程号）。下面再去安装docker包，网速不好的需要花费一段时间（比如我自己），弹出complete表示安装结束。<br>&emsp;&emsp;安装结束后我们现在需要启动docker，centos7和centos6启动服务命令不同，centos6无法使用systemctl命令启动，7之后的版本可以使用。启动docker服务命令如下：<code>systemctl start docker</code>。之后我们可输入命令<code>systemctl status docker</code>检查docker是否已经正在运行，显示running 表示docker服务正在运行，如下图。<br> <img src="/2019/04/20/docker/docker运行状态.jpg" alt="查看docker运行状态"> </p><h1 id="docker使用"><a href="#docker使用" class="headerlink" title="docker使用"></a>docker使用</h1><h2 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h2><p>&emsp;&emsp;在docker仓库中搜索centos7镜像，命令如下：docker search centos:7  </p><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><p>&emsp;&emsp;执行命令拉取镜像：<code>docker pull docker.io/cnetos</code></p><h2 id="进入容器与退出容器"><a href="#进入容器与退出容器" class="headerlink" title="进入容器与退出容器"></a>进入容器与退出容器</h2><p>&emsp;&emsp;1.进入容器命令：<code>docker run -t -i docker.io/centos   /bin/bash</code>，其中，-t参数让docker分配一个伪终端并绑定到标准输入上，-i参数则让容器的标准输入保持打开。进入容器后可看到命令行主机产生了改变，如下图：<br>  <img src="/2019/04/20/docker/进入容器.jpg" alt="进入容器"><br>&emsp;&emsp;2.退出容器：使用命令exit。<br>&emsp;&emsp;3.查看本地已有镜像，此处的本地是指安装的centos系统中已有的镜像，在查看之前，首先我们需要从docker容器中退出到centos系统中。查看命令如下：<code>docker images</code>，显示如下图所示。<br>  <img src="/2019/04/20/docker/查看本地已有镜像.jpg" alt="查看本地已有docker镜像"><br>&emsp;&emsp;注释：REPOSITORY:说明镜像来源于哪个仓库<br>&emsp;&emsp;TAG:镜像的标记<br>&emsp;&emsp;IMAGE ID它的ID号（唯一的）<br>&emsp;&emsp;CREATED：创建时间<br>&emsp;&emsp;VIRTUAL SIZE：镜像大小   </p><h2 id="保存docker镜像"><a href="#保存docker镜像" class="headerlink" title="保存docker镜像"></a>保存docker镜像</h2><p>&emsp;&emsp;使用命令<code>docker save -o centos7.tar docker.io/centos</code>将docker镜像打包到当前目录。<br>&emsp;&emsp;使用ls查看发现有一个叫centos7.tar的文件，这就是我们打包压缩好的centos7。<br>  <img src="/2019/04/20/docker/保存docker镜像.jpg" alt="保存docker镜像"> </p><h2 id="载入镜像"><a href="#载入镜像" class="headerlink" title="载入镜像"></a>载入镜像</h2><p>&emsp;&emsp;使用命令:<code>docker load --input centos7.tar</code>,<br>使用命令<code>docker ps -a</code>查看正在运行的容器，<code>docker stop ID号</code>终止正在运行的容器。<br>&emsp;&emsp;移除本地的docker镜像命令：<code>docker rm ID</code>，一处正在运行的docker镜像：<code>docker rm -f ID</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;title: docker&lt;br&gt;date: 2019-04-20 10:05:48&lt;/p&gt;
&lt;h2 id=&quot;tags-docker&quot;&gt;&lt;a href=&quot;#tags-docker&quot; class=&quot;headerlink&quot; title=&quot;tags: docker&quot;&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>项目测评学习</title>
    <link href="http://yoursite.com/2019/04/18/%E9%A1%B9%E7%9B%AE%E6%B5%8B%E8%AF%84%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/04/18/项目测评学习/</id>
    <published>2019-04-18T02:31:12.000Z</published>
    <updated>2019-04-18T07:50:16.303Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h1><p>&emsp;&emsp;客户在未设置网站最大连接数以及超时会话时间的情况下，使用的是tomcat默认设置。<br>&emsp;&emsp;1.对于tomcat版本5.5以下的，在tomcat的配置文件server.xml文件中的<connector>有maxthreads，后面的数字就是能够处理的最大连接数。<br>&emsp;&emsp;2.tomcat默认断开连接时间，5.5以下版本搜索sessionTimeout，5.5以上版本搜索connectionTimeout。</connector></p><h1 id="linux身份认证"><a href="#linux身份认证" class="headerlink" title="linux身份认证"></a>linux身份认证</h1><h2 id="hosts-equiv文件"><a href="#hosts-equiv文件" class="headerlink" title="hosts.equiv文件"></a>hosts.equiv文件</h2><p> &emsp;&emsp;hosts.equiv文件是为了便于远程主机在本地计算机上执行远程命令而设计的。    </p><h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><p>&emsp;&emsp;hosts.equiv和home目录下的.rhosts定义了哪些计算机和用户可以<code>不用提供口令</code>就在本地计算机上执行远程命令，如rcp等，这些不需要提供口令的计算机和用户称为受信任的。<br>&emsp;&emsp;当本地计算机收到执行远程命令请求时，相应的远程命令服务进程，如rcp远程拷贝服务，首先会检查/etc/hosts.equiv来确认请求是否来自受信任的计算机和用户，如果这个文件不存在或者虽然存在但不包括相应的计算机和用户，服务进程就会去检查$HOME/.rhosts文件。</p><h3 id="检查方法"><a href="#检查方法" class="headerlink" title="检查方法"></a>检查方法</h3><p>&emsp;&emsp;主机方面的测评项a)应对登录操作系统和数据库系统的用户进行身份标识和鉴别。对于linux系统来说，要做两个方面的检查，（1）查看/etc/passwd文件中各用户的密码字段是否为空；（2）<br>应删除.rhosts和/etc/hosts.equiv文件中的主机或用户。</p><h2 id="鉴别信息复杂度策略"><a href="#鉴别信息复杂度策略" class="headerlink" title="鉴别信息复杂度策略"></a>鉴别信息复杂度策略</h2><p>&emsp;&emsp;linux主机测评项:b)操作系统和数据库系统管理用户身份鉴别信息应具有不易被冒用的特点，口令应具有复杂度要求并定期更换。<br>&emsp;&emsp;查看/etc/login.defs文件，记录密码周期PASS_MAX_DAYS、PASS_MIN_DAYS；<br>&emsp;&emsp;查看/etc/pam.d/system-auth文件，此文件涉及到Linux服务器的密码复杂度，记录minlen=x(最小密码长度) ucredit=-x(最少x个大写字母) lcredit=-x(最少x个小写字母) dcredit=-x(最少x个数字)。</p><h2 id="登录失败处理策略配置"><a href="#登录失败处理策略配置" class="headerlink" title="登录失败处理策略配置"></a>登录失败处理策略配置</h2><p>&emsp;&emsp;linux主机测评项：c)应启用登录失败处理功能，可采取结束会话、限制非法登录次数和自动退出等措施。<br>&emsp;&emsp;查看/etc/pam.d/system-auth文件，记录deny=X unlock_time=x，X次登录失败后账户锁定x秒。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;tomcat&quot;&gt;&lt;a href=&quot;#tomcat&quot; class=&quot;headerlink&quot; title=&quot;tomcat&quot;&gt;&lt;/a&gt;tomcat&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;客户在未设置网站最大连接数以及超时会话时间的情况下，使用的是tomcat默认设置。&lt;
      
    
    </summary>
    
    
      <category term="等保" scheme="http://yoursite.com/tags/%E7%AD%89%E4%BF%9D/"/>
    
  </entry>
  
  <entry>
    <title>Kali Linux下的基础命令</title>
    <link href="http://yoursite.com/2019/04/09/Kali-Linux%E4%B8%8B%E7%9A%84%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2019/04/09/Kali-Linux下的基础命令/</id>
    <published>2019-04-09T01:31:50.000Z</published>
    <updated>2019-04-09T09:29:39.551Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Kali简介"><a href="#Kali简介" class="headerlink" title="Kali简介"></a>Kali简介</h1><p>&emsp;&emsp;Kali Linux是基于Debian的Linux发行版，设计用于数字取证和渗透测试的操作系统。预装了很多和渗透测试相关的软件，如nmap（端口扫描器）、Wireshark（数据分析器）等。   </p><h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><p>&emsp;&emsp;1.列出目录下的文件 ls<br>&emsp;&emsp;2.列出目录下的文件详细信息 ls -l<br>&emsp;&emsp;3.列出目录下文件的详细信息（文件大小带单位） ls -lh<br>&emsp;&emsp;4.列出目录下所有文件（包括隐藏文件） ls -a<br>&emsp;&emsp;5.列出目录下所有文件的详细信息（文件大小带单位） ls -alh<br>&emsp;&emsp;6.更换工作目录  cd<br>&emsp;&emsp;7.显示当前所在目录 pwd<br>&emsp;&emsp;8.返回上级目录 cd ..<br>&emsp;&emsp;9.返回上一次操作的目录 cd -<br>&emsp;&emsp;10.返回家目录 cd ~   </p><h1 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h1><p>&emsp;&emsp;1.创建新目录 mkdir dir-name<br>&emsp;&emsp;2.复制文件或者目录 cp -r 源文件目录地址  目标目录地址<br>&emsp;&emsp;3.删除空目录 rmdir dir-name<br>&emsp;&emsp;4,删除非空目录或文件 rm dir<br>&emsp;&emsp;5.删除目录下全部内容 rm -rf *<br>&emsp;&emsp;6.移动文件或目录 mv dir/file 目标目录地址<br>&emsp;&emsp;7.重命名格式 mv dir/file new   </p><h1 id="文件查看"><a href="#文件查看" class="headerlink" title="文件查看"></a>文件查看</h1><p>&emsp;&emsp;1.查看文件 cat file<br>&emsp;&emsp;2.查看文件头几行 head file<br>&emsp;&emsp;3.查看文件后几行 tail file<br>&emsp;&emsp;4.一页一页地显示文件 more file</p><h1 id="rpm套餐"><a href="#rpm套餐" class="headerlink" title="rpm套餐"></a>rpm套餐</h1><p>1.列出系统安装的所有软件 rpm -qa<br>2.筛选出含有指定文件名的软件 rpm -qa|grep 名称<br>3.</p><h1 id="Metasploit使用"><a href="#Metasploit使用" class="headerlink" title="Metasploit使用"></a>Metasploit使用</h1><p>&emsp;&emsp;启动此服务之前，需要先使用<code>service PostgreSQL start</code>启动PostgreSQL服务，再使用<code>service metasploit start</code>启动，输入<code>msfconsole</code>从终端启动metasploit框架。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Kali简介&quot;&gt;&lt;a href=&quot;#Kali简介&quot; class=&quot;headerlink&quot; title=&quot;Kali简介&quot;&gt;&lt;/a&gt;Kali简介&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;Kali Linux是基于Debian的Linux发行版，设计用于数字取证和渗透测试
      
    
    </summary>
    
    
      <category term="Kali" scheme="http://yoursite.com/tags/Kali/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap课题</title>
    <link href="http://yoursite.com/2019/04/01/sqlmap%E8%AF%BE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/04/01/sqlmap课题/</id>
    <published>2019-04-01T07:02:02.000Z</published>
    <updated>2019-04-01T07:02:02.325Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ubuntu16.04下安装sqlmap</title>
    <link href="http://yoursite.com/2019/04/01/ubuntu16-04%E4%B8%8B%E5%AE%89%E8%A3%85sqlmap/"/>
    <id>http://yoursite.com/2019/04/01/ubuntu16-04下安装sqlmap/</id>
    <published>2019-04-01T02:28:18.000Z</published>
    <updated>2019-04-01T06:03:21.315Z</updated>
    
    <content type="html"><![CDATA[<p>1.首先安装git，但报错如下：<br><img src="/2019/04/01/ubuntu16-04下安装sqlmap/无法安装git.JPG" alt="git安装报错"><br>2.给报错文件赋777权限。<br><img src="/2019/04/01/ubuntu16-04下安装sqlmap/解决无法安装git.JPG" alt="解决无法安装git"><br>3.安装sqlmap。<br><img src="/2019/04/01/ubuntu16-04下安装sqlmap/安装完成.JPG" alt="安装完成"><br>4.配置环境变量。在<code>home/jin</code>目录下执行<code>ls -a</code>，打开bashrc文件，文件末尾加入一下环境变量，同样，打开<code>/etc/profile</code>文件，在全局环境变量中也加入。<br><img src="/2019/04/01/ubuntu16-04下安装sqlmap/环境变量.JPG" alt="环境变量"><br>5.安装结束后在终端输入sqlmap，发现无反应。<br><img src="/2019/04/01/ubuntu16-04下安装sqlmap/不生效.JPG" alt="安装失败"><br>6.查阅资料，由于加入的环境变量不生效导致，分别执行<code>source .bashrc</code>和<code>source /etc/profile</code>使加入的环境变量生效。<br>7.输入sqlmap可以看到已生效。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.首先安装git，但报错如下：&lt;br&gt;&lt;img src=&quot;/2019/04/01/ubuntu16-04下安装sqlmap/无法安装git.JPG&quot; alt=&quot;git安装报错&quot;&gt;&lt;br&gt;2.给报错文件赋777权限。&lt;br&gt;&lt;img src=&quot;/2019/04/01/ubu
      
    
    </summary>
    
    
      <category term="sqlmap" scheme="http://yoursite.com/tags/sqlmap/"/>
    
  </entry>
  
  <entry>
    <title>随笔</title>
    <link href="http://yoursite.com/2019/03/27/%E9%9A%8F%E7%AC%94/"/>
    <id>http://yoursite.com/2019/03/27/随笔/</id>
    <published>2019-03-27T08:47:52.000Z</published>
    <updated>2019-03-27T08:50:50.841Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2019-3-27"><a href="#2019-3-27" class="headerlink" title="2019.3.27"></a>2019.3.27</h1><p>&emsp;&emsp;从今晚起 赏月 饮茶 品露水</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2019-3-27&quot;&gt;&lt;a href=&quot;#2019-3-27&quot; class=&quot;headerlink&quot; title=&quot;2019.3.27&quot;&gt;&lt;/a&gt;2019.3.27&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;从今晚起 赏月 饮茶 品露水&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试流程</title>
    <link href="http://yoursite.com/2019/03/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/03/11/渗透测试流程/</id>
    <published>2019-03-11T05:35:08.000Z</published>
    <updated>2019-03-11T09:23:36.463Z</updated>
    
    <content type="html"><![CDATA[<p>一、信息收集<br> 1.对网站进行简单的识别<br>   看请求头：Server: nginx/1.12.2<br> 2.对网站进行爬虫：使用工具webroot、AWVS<br> 3.对网站目录进行爆破扫描（为了对网站目录有了解）：工具预见、dirbrute<br> 4.对目标服务器进行端口扫描<br>  nmap、御剑2014<br> 5.查询目标网站的WEB程序<br>   wordpress、ghost、discuz等<br> 6.查询目标网站的旁站及C段<br>   旁站是指同一个服务器上的不同网站<br>二、漏洞发现<br>  1.文件上传漏洞<br>  2.SQL注入漏洞<br>  3.命令执行漏洞（比如：whoami、rm等）<br>  4.代码执行漏洞（比如phpinfo(),system()）<br>  5.XSS脚本跨站漏洞（有时要结合cookie，jsonp，session等）<br>  6.csrf操作劫持<br>  7.信息泄露（这一步漏洞发现主要是在信息收集时完成的。如phpinfo.php、config.php的数据库连接文件）<br>  8.一些第三方程序漏洞（ISS短文件名漏洞等）<br>  9.ssrf内网探测<br>  10.致命的漏洞（弱口令）<br>  在信息收集时如果已经明确了是某个CMS，可以尝试去漏洞库搜索该CMS对应的漏洞。<br>三、权限提升<br>  拿到WEB权限=getshell<br>  系统权限：windows的administrator，Linux的root权限<br>  提权操作：1.能执行系统命令，看系统版本，安装了哪些补丁，然后找该版本漏洞<br>四、后门维持<br>  win：远控<br>  Linux：远控、root双密码后门</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、信息收集&lt;br&gt; 1.对网站进行简单的识别&lt;br&gt;   看请求头：Server: nginx/1.12.2&lt;br&gt; 2.对网站进行爬虫：使用工具webroot、AWVS&lt;br&gt; 3.对网站目录进行爆破扫描（为了对网站目录有了解）：工具预见、dirbrute&lt;br&gt; 4.
      
    
    </summary>
    
    
      <category term="渗透" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>xss跨站攻击</title>
    <link href="http://yoursite.com/2019/03/05/xss%E8%B7%A8%E7%AB%99%E6%94%BB%E5%87%BB/"/>
    <id>http://yoursite.com/2019/03/05/xss跨站攻击/</id>
    <published>2019-03-05T13:04:50.000Z</published>
    <updated>2019-03-05T13:53:09.469Z</updated>
    
    <content type="html"><![CDATA[<p>xss攻击的是服务器返回给浏览器数据的过程，主要分为：存储型、反射型、dom型。</p><p>成功的构造弹窗是xss攻击的里程碑。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;xss攻击的是服务器返回给浏览器数据的过程，主要分为：存储型、反射型、dom型。&lt;/p&gt;
&lt;p&gt;成功的构造弹窗是xss攻击的里程碑。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="xss" scheme="http://yoursite.com/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入</title>
    <link href="http://yoursite.com/2019/02/19/SQL%E6%B3%A8%E5%85%A5/"/>
    <id>http://yoursite.com/2019/02/19/SQL注入/</id>
    <published>2019-02-19T06:50:02.000Z</published>
    <updated>2019-02-19T06:50:02.324Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>工作</title>
    <link href="http://yoursite.com/2019/02/19/%E5%B7%A5%E4%BD%9C/"/>
    <id>http://yoursite.com/2019/02/19/工作/</id>
    <published>2019-02-19T06:03:44.000Z</published>
    <updated>2019-02-19T06:08:46.163Z</updated>
    
    <content type="html"><![CDATA[<p>1.中风险：未启用登录失败处理功能。服务器登录需要通过腾讯运维平台、跳板机连接登录，提供登录失败处理功能；但服务器本身未设置登录失败处理功能。<br>  需要明确测评对象是服务器，即使通过其他运维平台登录的，最后一个步骤也需要有输入服务器的用户名、密码过程。否则，在一个子网内，登录上去的某一台服务器，也可以直接连接其他服务器，这样的方式是不允许的，可以通过查看防火墙配置，了解是否有允许其他方式登录的可能。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.中风险：未启用登录失败处理功能。服务器登录需要通过腾讯运维平台、跳板机连接登录，提供登录失败处理功能；但服务器本身未设置登录失败处理功能。&lt;br&gt;  需要明确测评对象是服务器，即使通过其他运维平台登录的，最后一个步骤也需要有输入服务器的用户名、密码过程。否则，在一个子网
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>报告学习1</title>
    <link href="http://yoursite.com/2019/02/13/%E6%8A%A5%E5%91%8A%E5%AD%A6%E4%B9%A01/"/>
    <id>http://yoursite.com/2019/02/13/报告学习1/</id>
    <published>2019-02-13T06:34:00.000Z</published>
    <updated>2019-02-13T06:42:37.620Z</updated>
    
    <content type="html"><![CDATA[<p>1.腾讯云VPC<br>2.腾讯云web应用防火墙：对网络边界的恶意代码检测和清除，<br>3.腾讯云web应用防火墙、主机防入侵产品云镜对攻击行为的记录内容、报警方式。<br>4.腾讯云BGP带宽：BGP（Border Gateway Protocol，边界网关协议）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.腾讯云VPC&lt;br&gt;2.腾讯云web应用防火墙：对网络边界的恶意代码检测和清除，&lt;br&gt;3.腾讯云web应用防火墙、主机防入侵产品云镜对攻击行为的记录内容、报警方式。&lt;br&gt;4.腾讯云BGP带宽：BGP（Border Gateway Protocol，边界网关协议）&lt;/
      
    
    </summary>
    
    
      <category term="报告" scheme="http://yoursite.com/tags/%E6%8A%A5%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>记录</title>
    <link href="http://yoursite.com/2019/02/11/%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2019/02/11/记录/</id>
    <published>2019-02-11T08:45:46.000Z</published>
    <updated>2019-04-12T09:17:06.013Z</updated>
    
    <content type="html"><![CDATA[<p>1.胡靓   SliSIeLVqut0GBI61b81g72dHJR4/soUKZVUvyoKSL5jnoAjpEdBpg==</p><h1 id="写报告注意事项"><a href="#写报告注意事项" class="headerlink" title="写报告注意事项"></a>写报告注意事项</h1><p>1.双击高危项，整改记录结果写详细，不能只写整改的那一部分，重新打分。<br>2.整改后不合格的需要和客户沟通，是否进行二次整改。<br>3.二级系统复核一般远程。</p><h1 id="写报告流程"><a href="#写报告流程" class="headerlink" title="写报告流程"></a>写报告流程</h1><h2 id="测评目的和依据"><a href="#测评目的和依据" class="headerlink" title="测评目的和依据"></a>测评目的和依据</h2><p>1.项目概述中的（DJCP2017310073）删除，右边的基本测评指标中-XXX不要勾选，其他保留。</p><h2 id="测评过程"><a href="#测评过程" class="headerlink" title="测评过程"></a>测评过程</h2><p>5.简介中的第一行时间注意修改，项目启动为调研第一天，末次会议正常情况是进场的最后一天（末次会议时间一定要在渗透测试之后），复核日期按照实际来写（不要在用户提交整改情况后过久，用户提交整改材料时间后一周内）。<br>6.详细过程中的每个测评项的天数看情况完善后预览，预览中的4.分析与报告时间在复核时间确认之后，3中的现场实施结束时间在渗透测试之后，一般在进场的最后一天，方案编制过程为调研第二天，总时间为3天，最后一天不能在休息日，不合理的手动修改。<br>7.被测系统信息和承载业务情况在备案材料中找。<br>8.被测信息系统情况下的前次测评情况，如果是首次测评写：本次测评为首次测评。<br>9业务承载情况中的承载业务情况相关图片可以放也可以不放。<br>10.网络结构中的系统边界不用写。<br>11.安全服务商在系统建设最后一个测评项中找，安全服务名称例如：云服务。<br>12.测评对象选择方法中的“XX”删除，测评工具可以勾选也可以不选，具体的按照指定的模板。<br>13.整体测评第一页不改，第二页从例如开始全部删除，加上一句：经综合分析，，，，，，。<br>14.06总体评价中的内容全部删除，需要自己写。<br>15.ACDE文件，出具报告申请文件，必须在报告生成后生成，。A文件点击高级-》项目——》一键归档-》测评结论报告——》点击下载模板。文件中的每一项都是一票否决项，每一项描述文字不能超过500字，不能有图片。A文件的最后时间下一行加上参入测评人员（有证人员）<br>16.C文件是安全问题汇总，导出即可。<br>17.D文件不在工具中导，拿模板修改。<br>18.E文件导出整改状态调整。导出后表格中首句有句号，删掉加上未整改，或者直接删除。文件末尾时间是复核时间。<br>19.方案编制的最后一天不能是休息日，必须在工作日。<br>20.表格中一行内容都没有的，写“无”，合并单元格并居中。</p><h1 id="微盟报告检测注意事项"><a href="#微盟报告检测注意事项" class="headerlink" title="微盟报告检测注意事项"></a>微盟报告检测注意事项</h1><p>1.基于云平台的，在附上A13云平台的等级备案，更新目录时，将目录中的”A13XXX”删除，文本中依然以标题的形式存放。<br>2.报告中A12的漏扫中，如果有两份漏扫报告，这两份报告中的漏洞名称可能有一样的，需要将这两个合并，然后在地址栏中写两个漏洞地址。<br>3.云上系统，在3.2章节关于测评对象选择结果，该说明的都要说明。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.胡靓   SliSIeLVqut0GBI61b81g72dHJR4/soUKZVUvyoKSL5jnoAjpEdBpg==&lt;/p&gt;
&lt;h1 id=&quot;写报告注意事项&quot;&gt;&lt;a href=&quot;#写报告注意事项&quot; class=&quot;headerlink&quot; title=&quot;写报告注意事项
      
    
    </summary>
    
    
      <category term="记录" scheme="http://yoursite.com/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>初级考试-应用</title>
    <link href="http://yoursite.com/2019/02/11/%E5%88%9D%E7%BA%A7%E8%80%83%E8%AF%95-%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2019/02/11/初级考试-应用/</id>
    <published>2019-02-11T07:04:55.000Z</published>
    <updated>2019-02-11T09:30:34.304Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>  应用安全包括：身份鉴别、访问控制、安全审计、剩余信息保护、通信完整性、通信保密性、抗抵赖、软件容错和资源控制。</p><h2 id="身份鉴别"><a href="#身份鉴别" class="headerlink" title="身份鉴别"></a>身份鉴别</h2><p>1.应提供专用的登录控制模块对登录用户进行身份标识和鉴别。<br>2.应对同一用户采用两种或两种以上组合的鉴别技术实现用户身份鉴别。<br>3.应提供用户身份标识唯一和鉴别信息复杂度检查功能，保证应用系统中不存在重复用户身份标识，身份鉴别信息不易被冒用。<br>4.应提供登录失败处理功能，可采取结束会话、限制非法登录次数和自动退出等措施。<br>5.应启用身份鉴别、用户身份标识唯一性检查、用户身份鉴别信息复杂度检查，以及登录失败处理功能，并根据安全策略配置相关参数。</p><h2 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h2><p>1.应提供访问控制功能，依据安全策略控制用户对文件、数据库表等客体的访问。<br>2.访问控制的覆盖范围应包括与资源访问相关的主体、客体及它们之间的操作。<br>3.应由授权主体配置访问控制策略，并严格限制默认账户的访问权限。<br>4.应授予不同账户为完成各自承担任务所需的最小权限，并在它们之间形成相互制约关系。<br>5.应具有对重要信息资源设置敏感标记的功能。<br>6.应依据安全策略严格控制用户对有敏感标记重要信息资源的操作。</p><h2 id="安全审计"><a href="#安全审计" class="headerlink" title="安全审计"></a>安全审计</h2><p>1.应提供覆盖到每个用户的安全审计功能，对应用系统重要安全事件进行审计。<br>2.应保证无法单独中断审计进程，无法删除、修改或覆盖审计记录。<br>3.审计记录的内容至少应包括事件的日期、时间、发起者信息、类型、描述和结果等。<br>4.应提供对审计记录数据进行统计、查询、分析及生成审计报表的功能。</p><h2 id="剩余信息保护"><a href="#剩余信息保护" class="headerlink" title="剩余信息保护"></a>剩余信息保护</h2><p>1.应保证用户鉴别信息所在的存储空间被释放或再分配给其他用户前被完全清除，无论这些信息是存放在硬盘上还是在内存中。<br>2.应保证系统内的文件、目录和数据库记录等资源所在的存储空间被释放或重新分配给其他用户前得到完全清除。</p><h2 id="通信完整性"><a href="#通信完整性" class="headerlink" title="通信完整性"></a>通信完整性</h2><p>1.应采用密码技术保证通信过程中数据的完整性。</p><h2 id="通信保密性"><a href="#通信保密性" class="headerlink" title="通信保密性"></a>通信保密性</h2><p>1.在通信双方建立连接之前，应用系统应利用密码技术进行会话初始化验证。<br>2.应对通信过程中的整个报文或会话过程进行加密。</p><h2 id="抗抵赖"><a href="#抗抵赖" class="headerlink" title="抗抵赖"></a>抗抵赖</h2><p>1.应具有在请求的情况下为数据原发者或接受者提供数据原发证据的功能。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;  应用安全包括：身份鉴别、访问控制、安全审计、剩余信息保护、通信完整性、通信保密性、抗抵赖、软件容错和资源控制。&lt;/p&gt;
&lt;h2 id=&quot;
      
    
    </summary>
    
    
      <category term="考试" scheme="http://yoursite.com/tags/%E8%80%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>初级考试</title>
    <link href="http://yoursite.com/2019/02/11/%E5%88%9D%E7%BA%A7%E8%80%83%E8%AF%95-%E4%B8%BB%E6%9C%BA/"/>
    <id>http://yoursite.com/2019/02/11/初级考试-主机/</id>
    <published>2019-02-11T02:40:58.000Z</published>
    <updated>2019-03-27T06:55:12.427Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>   学生时代虽然讨厌考试，但是每次考试基本上如鱼得水，大概我就是所谓的擅长考试的那一类人了。工作了依然是要考试的，考试时间在3月份，之前上网搜查了一下考试内容，除了一些操作性较强的，很多关于指导书上的考的都是一些测评指标的具体测评项，现在就来大致总结一下，方便日后回顾，以下内容皆是1.0标准的三级系统。</p><h1 id="主机安全"><a href="#主机安全" class="headerlink" title="主机安全"></a>主机安全</h1><p> 主机安全测评分为两个部分:操作系统测评和数据库系统测评。</p><h2 id="操作系统测评"><a href="#操作系统测评" class="headerlink" title="操作系统测评"></a>操作系统测评</h2><p>操作系统安全测评包含7个方面的内容：身份鉴别、访问控制、安全审计、剩余信息保护、入侵防范、恶意代码防范、资源控制。</p><h3 id="身份鉴别"><a href="#身份鉴别" class="headerlink" title="身份鉴别"></a>身份鉴别</h3><p>1.应对登录操作系统和数据库系统的用户进行身份标识和鉴别<br>2.操作系统和数据库系统管理用户身份鉴别信息应具有不易被冒用的特点，口令应有复杂度要求并定期更换。<br>3.应启用登录失败处理功能，可采取结束会话、限制非法登录次数和自动退出等措施。<br>4.当对服务器进行远程管理时，应采取必要措施，防止鉴别信息在网络传输过程中被窃听。<br>5.应为操作系统和数据库系统的不同用户分配不同的用户名，确保用户名具有唯一性。<br>6.应采用两种或两种以上组合的鉴别技术对管理用户进行身份鉴别。</p><h3 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h3><p>1.应启用访问控制功能，依据安全策略控制用户对资源的访问。<br>2.应根据管理用户的角色分配权限，实现管理用户的权限分离，仅授予管理用户所需的最小权限。<br>3.应实现操作系统和数据库系统特权用户的权限分离。<br>4.应严格限制默认账户的访问权限，重命名系统默认账户，修改这些账户的默认口令。<br>5.应及时删除多余的、过期的账户，避免共享账户的存在。<br>6.应对重要信息资源设置敏感标记。<br>7.应依据安全策略严格控制用户对有敏感标记重要信息资源的操作。</p><h3 id="安全审计"><a href="#安全审计" class="headerlink" title="安全审计"></a>安全审计</h3><p>1.审计范围应覆盖到服务器和重要客户端上的每个操作系统用户和数据库用户。<br>2.审计内容应包括重要用户行为、系统资源的异常使用和重要系统命令的使用等系统内重要的安全相关事件。<br>3.审计记录应包括事件的日期、时间、类型、主体标识、客体标识和结果等。<br>4.应能够根据记录数据进行分析，并生成审计报表。<br>5.应保护审计进程，避免受到未预期的中断。<br>6.应保护审计记录，避免受到未预期的删除、修改或覆盖等。</p><h3 id="剩余信息保护"><a href="#剩余信息保护" class="headerlink" title="剩余信息保护"></a>剩余信息保护</h3><p>1.应保证操作系统和数据库系统用户的鉴别信息所在的存储空间，被释放或再分配给其他用户前得到完全清除，无论这些信息是存放在硬盘上还是内存中。<br>2.应确保系统内的文件、目录和数据库记录等资源所在的存储空间，被释放或重新分配给其他用户前得到完全清除。</p><h3 id="入侵防范"><a href="#入侵防范" class="headerlink" title="入侵防范"></a>入侵防范</h3><p>1.应能够检测到对重要服务器进行入侵的行为，能够记录入侵的源IP，攻击的类型、目的、时间，并在发生严重入侵事件时提供报警。<br>2.应能够对重要程序的完整性进行检测，并在检测到完整性受到破坏后具有恢复的措施。<br>3.操作系统应遵循最小安装的原则，仅安装需要的组件和应用程序，并通过设置升级服务器等方式保持系统补丁及时得到更新。</p><h3 id="恶意代码防范"><a href="#恶意代码防范" class="headerlink" title="恶意代码防范"></a>恶意代码防范</h3><p>1.应安装防恶意代码软件，并及时更新防恶意代码软件版本和恶意代码库。<br>2.主机防恶意代码产品应具有与网络防恶意代码产品不同的恶意代码库。<br>3.应支持防恶意代码的统一管理。</p><h3 id="资源控制"><a href="#资源控制" class="headerlink" title="资源控制"></a>资源控制</h3><p>1.应通过设定终端接入方式、网络地址范围等条件限制终端登录。<br>2.应根据安全策略设置登录终端的操作超时锁定。<br>3.应对重要服务器进行监视，包括监视服务器的CPU、硬盘、内存、网络等资源的使用情况。<br>4.应限制单个用户对系统资源的最大或最小使用限度。<br>5.应能够对系统的服务水平降低到预先规定的最小值进行检测和报警。</p><h2 id="数据库系统测评"><a href="#数据库系统测评" class="headerlink" title="数据库系统测评"></a>数据库系统测评</h2><h3 id="身份鉴别-1"><a href="#身份鉴别-1" class="headerlink" title="身份鉴别"></a>身份鉴别</h3><p>1.应对登录操作系统和数据库系统的用户进行身份标识和鉴别。<br>2.操作系统和数据库系统管理用户身份标识应具有不易被冒用的特点，口令应具有复杂度要求并定期更换。<br>3.应启用登录失败处理功能，可采取结束会话、限制非法登录次数和自动退出等措施。<br>4.当对服务器进行远程管理时，应采取必要措施，防止鉴别信息在网络传输过程中被窃听。<br>5.应为操作系统和数据库系统的不同用户分配不同的用户名，确保用户名具有唯一性。<br>6.应采用两种或两种以上组合的鉴别技术对管理用户进行身份鉴别。</p><h3 id="访问控制-1"><a href="#访问控制-1" class="headerlink" title="访问控制"></a>访问控制</h3><p>1.应启用访问控制功能，依据安全策略控制用户对资源的访问。<br>2.应根据管理用户的角色分配权限，实现管理用户的权限分离，仅授予管理用户所需的最小权限。<br>3.应实现操作系统和数据库系统特权用户的权限分离。<br>4.应严格限制默认账户的访问权限，重命名默认账户，修改这些账户的默认口令。<br>5.应及时删除多余的、过期的账户，避免共享账户的存在。<br>6.应对重要信息资源设置敏感标记。<br>7.应依据安全策略严格控制用户对有敏感标记重要资源的操作。</p><h3 id="安全审计-1"><a href="#安全审计-1" class="headerlink" title="安全审计"></a>安全审计</h3><p>1.审计范围应覆盖到服务器和重要客户端上的每个操作系统用户的数据库用户。<br>2.审计内容应包括重要用户行为、系统资源的异常使用和重要系统命令的使用等系统内重要的安全相关事件。<br>3.审计记录应包括事件的日期、事件、类型、主体标识、客体标识和结果等。<br>4.应能够根据记录数据进行分析，并生成审计报表。<br>5.应保护审计进程，避免受到未预期的中断。<br>6.应保护审计记录，避免受到未预期的删除、修改或覆盖等。</p><h3 id="资源控制-1"><a href="#资源控制-1" class="headerlink" title="资源控制"></a>资源控制</h3><p>1.应通过设定终端登录方式、网络地址范围等条件限制终端登录。<br>2.应根据安全策略设置登录终端的超时锁定。<br>3.应限制单个用户对系统资源的最大或最小使用限度。</p><h2 id="主机测评总结"><a href="#主机测评总结" class="headerlink" title="主机测评总结"></a>主机测评总结</h2><p>&emsp;&emsp;1.Linux服务器下，身份鉴别模块测评项：操作系统和数据库系统管理用户身份鉴别信息应具有不易被冒用的特点，口令应具有复杂度要求并定期更换。<br>&emsp;&emsp;查看/etc/login.defs文件，记录密码周期PASS_MAX_DAYS、PASS_MIN_DAYS<br>&emsp;&emsp;查看/etc/pam.d/system-auth文件，此文件涉及到Linux服务器的密码复杂度，记录minlen=x(最小密码长度) ucredit=-x(最少x个大写字母) lcredit=-x(最少x个小写字母) dcredit=-x(最少x个数字)<br>&emsp;&emsp;2.Linux服务器下，身份鉴别模块测评项：应启用登录失败处理功能，可采取结束会话、限制非法登录次数和自动退出等措施。<br>&emsp;&emsp;查看/etc/pam.d/system-auth文件，记录deny=X unlock_time=x，X次登录失败后账户锁定x秒。<br>&emsp;&emsp;3.Linux服务器下，安全审计模块测评项：审计范围应覆盖到服务器上的每个操作系统用户和数据库用户。<br>&emsp;&emsp;先查看Linux的日志和审计工具是否开启：<br>service rsyslog status、service auditd status，其次访问是否有第三方的审计工具。   </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;   学生时代虽然讨厌考试，但是每次考试基本上如鱼得水，大概我就是所谓的擅长考试的那一类人了。工作了依然是要考试的，考试时间在3月份，之前上
      
    
    </summary>
    
    
      <category term="考试" scheme="http://yoursite.com/tags/%E8%80%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>burpsuite与web安全基础</title>
    <link href="http://yoursite.com/2019/01/24/burpsuite%E4%B8%8Eweb%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2019/01/24/burpsuite与web安全基础/</id>
    <published>2019-01-24T02:38:59.000Z</published>
    <updated>2019-03-19T13:12:29.781Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>  已在本地电脑虚拟机上配置好Java环境，运行burpsuite命令：java -Xbootclasspath/p:burp-loader-keygen.jar -jar burpsuite_pro_v1.7.11.jar 或者先启动buro-loader-keygen.jar然后直接点击run就可以运行burpsuite的主程序。</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>  1.burpsuite是由Java语言编写而成，它的可执行程序是Java文件类型的jar文件。<br>2.burpsuite代理工具是以拦截代理的方式，拦截所有通过代理的网络流量，如客户端的请求数据、服务器端的返回信息等。burpsuite主要拦截http和https协议的流量。<br>  浏览器将数据请求发给burpsuite，burpsuite发给web服务器，web服务器返回的数据被burpsuite拦截后返回给浏览器。<br>3.安装好burpsuite之后，设置了本地代理也安装了证书，但是依然无法拦截https请求，这是因为在设置本地代理时，下面的ssl代理没有打开，应设置成如下：<br>  <img src="burpsuite与web安全基础/拦截https协议.jpg" alt="拦截https"><br>4.抓取数据包时，先关闭intercept，然后打开intercept，输入网址。<br>5.http返回码<br>1XX  提供信息<br>200 请求成功提交了<br>3XX 客户端被服务器把资源定位于其他 301浏览器永久重定向到其他位置，302临时重定向<br>4XX 请求是有错误的，客户端提交了一个无效的http<br>请求，比如请求了一个不存在的资源，如404错误<br>5XX 服务器出问题。</p><p>6.https加密流程</p><h1 id="安装DVWA"><a href="#安装DVWA" class="headerlink" title="安装DVWA"></a>安装DVWA</h1><p>详细过程百度，DVWA复制到了html文件夹下。</p><h1 id="命令攻击"><a href="#命令攻击" class="headerlink" title="命令攻击"></a>命令攻击</h1><h2 id="常见命令符"><a href="#常见命令符" class="headerlink" title="常见命令符"></a>常见命令符</h2><p>  常见命令符”|”,”;”,”&amp;&amp;”。ping 127.0.0.1本地回环地址时，在后面输入命令符跟上命令后浏览器将两条一起执行。<br> 在shell中,”;”标识先执行前面的命令后执行后面的命令。<br>  验证发现，漏洞等级为低时，三个命令符均生效，漏洞等级为中等或高时，只有”|”命令符生效。</p><h2 id="命令攻击漏洞危害"><a href="#命令攻击漏洞危害" class="headerlink" title="命令攻击漏洞危害"></a>命令攻击漏洞危害</h2><p>  举例：在Linux系统中，浏览器中输入127.0.0.1|cat /etc/passwd，会直接看到Linux系统的用户表，知晓用户表可被用来做SSH爆破，猜测邮箱等，非常不安全。其他命令如下载、安装、新建文件等都可以被执行。</p><h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><h2 id="防御文件包含"><a href="#防御文件包含" class="headerlink" title="防御文件包含"></a>防御文件包含</h2><p>1.避免由外界指定文件名。<br>2.文件名中不可包含目录名。<br>3.限定文件名中仅包含字母和数字。<br>4.指定可以访问的白名单。</p><h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><h1 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a>一句话木马</h1><h1 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h1><p>网络发现和安全审计的网络安全工具<br>官方站点：<a href="http://nmap.org/" target="_blank" rel="noopener">http://nmap.org/</a><br>nmap的主要功能如下：<br>1.检测活在网络上的主机（主机发现）<br>2.检测主机上开放的端口（端口发现或枚举）<br>3.检测相应的端口（服务发现）的软件和版本<br>4.检测操作系统，硬件地址，以及软件版本。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;  已在本地电脑虚拟机上配置好Java环境，运行burpsuite命令：java -Xbootclasspath/p:burp-loader
      
    
    </summary>
    
    
      <category term="burpsuite" scheme="http://yoursite.com/tags/burpsuite/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu系统搭建php环境</title>
    <link href="http://yoursite.com/2019/01/23/ubuntu%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BAphp%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2019/01/23/ubuntu系统搭建php环境/</id>
    <published>2019-01-23T11:55:50.000Z</published>
    <updated>2019-01-24T02:34:07.523Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h1><p> sudo apt-get install openssh-server</p><h1 id="安装php"><a href="#安装php" class="headerlink" title="安装php"></a>安装php</h1><p>安装php5.6<br>sudo apt-get update<br>sudo apt-get install php5.6</p><p>安装扩展<br>sudo apt-get install php5.6-gd<br>sudo apt-get install php5.6-mysql</p><h1 id="安装Apache2"><a href="#安装Apache2" class="headerlink" title="安装Apache2"></a>安装Apache2</h1><p>安装Apache2<br>sudo apt install apache2<br>sudo apt-get install libapache2-mod-php5.6</p><p>启动apache服务器<br>service apache2 start<br>验证apache安装成功，在本地电脑上浏览器中输入虚拟机IP地址，可以看到apache的默认界面</p><h1 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h1><p>sudo apt install mysql-server php5.6-mysql<br>这里输入两次密码<br>sudo apt-get install mysql-client<br>启动mysql服务： systemctl start mysql.service，输出结果如下</p><p>查看mysql服务是否已经启动：<br>查看mysql进程，输入命令 ps -aux | grep mysql，可以看到存在mysql进程。</p><h1 id="配色方案"><a href="#配色方案" class="headerlink" title="配色方案"></a>配色方案</h1><p>xshell终端中的配色不好看，在修改过程中误删了.bashrc文件，后面不管如何导入配色方案都不能有预期的效果，只能先恢复此文件，在linux中/etc/skel目录下是Linux的各种初始化配置文件存放目录。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ubuntu&quot;&gt;&lt;a href=&quot;#ubuntu&quot; class=&quot;headerlink&quot; title=&quot;ubuntu&quot;&gt;&lt;/a&gt;ubuntu&lt;/h1&gt;&lt;p&gt; sudo apt-get install openssh-server&lt;/p&gt;
&lt;h1 id=&quot;安装php
      
    
    </summary>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>windows</title>
    <link href="http://yoursite.com/2019/01/23/windows/"/>
    <id>http://yoursite.com/2019/01/23/windows/</id>
    <published>2019-01-23T02:17:56.000Z</published>
    <updated>2019-01-23T15:20:00.107Z</updated>
    
    <content type="html"><![CDATA[<h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><p>快捷键：win+r<br>1.输入cmd windows的dos界面<br>2.输入mstsc 弹出 windows的远程桌面连接界面，在windows属性中可以打开远程桌面功能，远程使用的是3389端口，需设置密码强度防止入侵。<br>3.输入services.msc 直接打开windows服务。<br>4.输入regedit 打开windows注册表<br>5.control 打开控制面板</p><h1 id="DHCP"><a href="#DHCP" class="headerlink" title="DHCP"></a>DHCP</h1><h2 id="DHCP原理"><a href="#DHCP原理" class="headerlink" title="DHCP原理"></a>DHCP原理</h2><p>1.客户端发送广播包；<br>2.服务器提供响应，在自己的数据库中查找可用地址交付（响应依然是广播包）<br>3.客户端确认IP，服务器确认改地址已经被分配<br>4.服务器确认租约<br>5.当客户机重启或租期到达一半时，进行续租；租期间无法联系，租约到达后直接发送广播包。</p><h1 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h1><p>将域名转成IP地址，告诉主机应该从哪里请求数据。<br>1.域名解析的系统判断顺序：c:\windows\system32\drivers\etc\hosts文件，然后是DNS缓存，最后是DNS服务器<br>2.服务器判断顺序：本地缓存 本地数据 转发器 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;&lt;/a&gt;命令&lt;/h1&gt;&lt;p&gt;快捷键：win+r&lt;br&gt;1.输入cmd windows的dos界面&lt;br&gt;2.输入mstsc 弹出 windows的远程桌面连接界面，在w
      
    
    </summary>
    
    
      <category term="windows" scheme="http://yoursite.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>php基础</title>
    <link href="http://yoursite.com/2019/01/22/php%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2019/01/22/php基础/</id>
    <published>2019-01-22T00:59:58.000Z</published>
    <updated>2019-01-23T01:32:18.932Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　我因学习不做笔记浪费了大量时间，知识在学习之后遗忘，遗忘之后重新学地不断循环。走过坑，踩过雷。也曾或许未来也是地雄心壮志地一段时间，然而脑子里想着我要做再多的事要学再多的知识都是浮于表面，不去真正动手事情永远摆在脑海里，长此以往便让人身心疲惫。“你觉得累是因为想的多而做的少罢了”一位前辈曾经如此教导，细细一想，确实没错。迷茫时学习就对了，不想动只是给自己的懒惰找借口，我也算看清自己性格弱点以及内心不正道的想法了。　　</p><p>&emsp;&emsp;好好学习，天天向上。</p><h1 id="php变量"><a href="#php变量" class="headerlink" title="php变量"></a>php变量</h1><h2 id="php代码格式"><a href="#php代码格式" class="headerlink" title="php代码格式"></a>php代码格式</h2><pre><code>`＜？php   php代码    ?＞`</code></pre><h2 id="php变量命名规则"><a href="#php变量命名规则" class="headerlink" title="php变量命名规则"></a>php变量命名规则</h2><p>&emsp;&emsp;1.变量以 $ 符号开始，后面跟着变量的名称<br>&emsp;&emsp;2.量名必须以字母或者下划线字符开头<br>&emsp;&emsp;3.变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）<br>&emsp;&emsp;4.变量名不能包含空格<br>&emsp;&emsp;5.变量名是区分大小写的（$y 和 $Y 是两个不同的变量）</p><h2 id="创建php变量"><a href="#创建php变量" class="headerlink" title="创建php变量"></a>创建php变量</h2><p>&emsp;&emsp;PHP没有声明变量的命令，变量无需声明，在第一次给它赋值的同时就被创建。php是一门弱类型语言，不必向 PHP 声明该变量的数据类型。PHP 会根据变量的值，自动把变量转换为正确的数据类型。在强类型的编程语言中，我们必须在使用变量前先声明（定义）变量的类型和名称。   </p><h3 id="变量"><a href="#变量" class="headerlink" title="变量$"></a>变量$</h3><p>&emsp;&emsp;在给变量赋值时即创建变量，那么$x赋值之后，在下面使用值时，能否直接使用x呢？<br>&emsp;&emsp;答案是不可以的，因为$x一个整体代表中国变量，分开使用会报错，如下，为代码示例：    </p><pre><code>&lt;?php    $a = 5;    echo a;   ?&gt;   `</code></pre><p>&emsp;&emsp;上述代码，输出时只输出a，在浏览器中解释执行后报错如下：<br>  <img src="/2019/01/22/php基础/变量使用.jpg" alt="变量使用"><br>&emsp;&emsp;正确代码如下：<br>  <img src="/2019/01/22/php基础/使用变量的正确方法.jpg" alt="变量使用"></p><h3 id="变量大小写"><a href="#变量大小写" class="headerlink" title="变量大小写"></a>变量大小写</h3><p>&emsp;&emsp;代码示例如下：   </p><pre><code>&lt;?php   $a = 5;   echo $A;   ?&gt;</code></pre><p>   `<br>&emsp;&emsp;输出结果为:<br> <img src="/2019/01/22/php基础/大小写注意事项.jpg" alt="变量使用"></p><h1 id="php变量引用"><a href="#php变量引用" class="headerlink" title="php变量引用"></a>php变量引用</h1><pre><code> &lt;?php $a = 5;    $b = 12; $a = &amp;$b;echo $a;?&gt;</code></pre><p>`<br>&emsp;&emsp;上述代码，首先给a,b两个变量开辟两个不同的空间，$a=&amp;$b;这句代码将变量a指向变量b所在的空间，这样，当这个空间的值为多少或者改变了，那么a和b两个的值都是一样的。所以上面代码输出值为12。</p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>1.定义与使用<br>&emsp;&emsp;php函数定义到调用如下：<br><img src="/2019/01/22/php基础/函数.jpg" alt="函数"><br>&emsp;&emsp;注意：函数生效必须调用，只定义函数内容不会执行。<br>2.实参与形参<br>当函数形参没有默认值时，调用函数时，实参参数个数必须与形参一致，否则报错。如下。<br><img src="/2019/01/22/php基础/参数.jpg" alt="函数"><br>当函数形参有默认值时，实参参数个数无需和形参个数相同。如下代码：<br><img src="/2019/01/22/php基础/形参默认.jpg" alt="函数"><br>3.静态变量<br>静态变量只有第一次被初始化，在后面代码中继续用到函数体中的该静态变量时，不会再次执行初始化语句，变量值在上次执行后的基础上继续执行，如下面代码，输出$a的值一直是1，而$b的值则是3，第二次执行函数后是4：<br> <img src="/2019/01/22/php基础/静态变量.jpg" alt="函数">  </p><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>1.第一种方法<br>$arr = array(元素1，元素2，元素3…);<br>2.第二种方法<br>$arr[] = 元素1;//将元素1添加到$arr数组中；<br>$arr[] = 元素2；//将元素2添加到$arr数组中；   </p><h2 id="遍历数组"><a href="#遍历数组" class="headerlink" title="遍历数组"></a>遍历数组</h2><pre><code>&lt;?php $arr = array(&apos;jin&apos;,&apos;21&apos;,&apos;网络安全&apos;); for($i=0;$i&lt;3;$i++){     echo $arr[$i];     echo &quot;&lt;br/&gt;&quot;; }?&gt; </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;　　我因学习不做笔记浪费了大量时间，知识在学习之后遗忘，遗忘之后重新学地不断循环。走过坑，踩过雷。也曾或许未来也是地雄心壮志地一段时间，然而
      
    
    </summary>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>php环境</title>
    <link href="http://yoursite.com/2019/01/18/php%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2019/01/18/php环境/</id>
    <published>2019-01-18T07:27:01.000Z</published>
    <updated>2019-01-18T07:38:55.643Z</updated>
    
    <content type="html"><![CDATA[<p>大二一段时间开始学习PHP，搭建环境用了一个多月，失败了，当时归结于三个软件版本下的不对有冲突，一个多月后最终使用了PHP的集成环境wamp，使用起来可以，但总觉得自己走的不是正儿八经的道路，最近学习渗透，教程里使用的也是PHP环境，一想都是痛苦的回忆，虽不想再捡起，但狠狠心还是撸起袖子加油干吧。<br>1.管理员模式打开dos。<br>2.卸载apache服务: sc delete Apache2.4<br>3.安装apache服务：httpd.exe -k install<br>4.开启apache服务：net start Apache2.4<br>5.停止apache服务：net stop Apache2.4</p><p>6.php语法中，代码里出现mysql执行出错，改为mysqli即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大二一段时间开始学习PHP，搭建环境用了一个多月，失败了，当时归结于三个软件版本下的不对有冲突，一个多月后最终使用了PHP的集成环境wamp，使用起来可以，但总觉得自己走的不是正儿八经的道路，最近学习渗透，教程里使用的也是PHP环境，一想都是痛苦的回忆，虽不想再捡起，但狠狠
      
    
    </summary>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>更换电脑的博客问题</title>
    <link href="http://yoursite.com/2019/01/09/%E6%9B%B4%E6%8D%A2%E7%94%B5%E8%84%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/01/09/更换电脑的博客问题/</id>
    <published>2019-01-09T06:38:34.000Z</published>
    <updated>2019-01-09T07:22:00.016Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp;&emsp;公司新发了一台笔记本，以往我还是使用自己的笔记本，某天，钟老师说：“你怎么不带公司发的笔记本，是不是嫌弃它比你的重？”说完阴险地笑了笑。组长听了这话，和颜悦色地对我说：“下次出项目还是统一一下电脑吧。”于是，这个星期我便换了新的电脑，新电脑上很多环境都要自己配，麻烦，但也权当是一个知识的回顾过程吧。首先，便是换电脑之后hexo博客如何继续更新的问题，以下是解决步骤。</p><h1 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h1><h2 id="NodeJs下载与环境配置"><a href="#NodeJs下载与环境配置" class="headerlink" title="NodeJs下载与环境配置"></a>NodeJs下载与环境配置</h2><p>&emsp;&emsp;在官网上下载NodeJs，一路next,选择安装地址时为D:\kit\node.js，完成后在cmd控制台中输入node -version提示node不是命令，这是因为在系统变量path中没有将D:\kit\node.js路径加进去，添加好之后再次输入还是无效，重新启动后成功，想来我自己的电脑是win7是不用重新启动的，而新电脑是win10，必须要重新启动。控制台中输入node -v显示如下信息说明安装成功。<br> <img src="/2019/01/09/更换电脑的博客问题/node安装成功.jpg" alt="node安装成功"></p><h2 id="Git下载与配置"><a href="#Git下载与配置" class="headerlink" title="Git下载与配置"></a>Git下载与配置</h2><p>&emsp;&emsp;在官网上下载Git工具，安装步骤网上有很多，安装结束后，桌面点击鼠标右键，看到有下图说明安装成功。<br> <img src="/2019/01/09/更换电脑的博客问题/Git安装成功.jpg" alt="Git安装成功"></p><h2 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h2><p>&emsp;&emsp;在cmd窗口中输入<code>npm install hexo-cli -g</code>来安装hexo，结束后输入hexo -v可以查看安装是否成功。<br><img src="/2019/01/09/更换电脑的博客问题/hexo安装.jpg" alt="hexo安装"></p><h1 id="在GitHub官网上添加新电脑产生的秘钥"><a href="#在GitHub官网上添加新电脑产生的秘钥" class="headerlink" title="在GitHub官网上添加新电脑产生的秘钥"></a>在GitHub官网上添加新电脑产生的秘钥</h1><ul><li>1.首先配置Git的用户名和邮箱。<br><img src="/2019/01/09/更换电脑的博客问题/配置Git用户名和邮箱.jpg" alt="配置Git用户名和邮箱"><br>2.输入命令在电脑上生成新的SSH KEY。连续点击三次“enter”键。如果电脑上之前已经生成过SSH KEY，那么新的会覆盖旧的。<br><img src="/2019/01/09/更换电脑的博客问题/给电脑上生成SSH KEY.jpg" alt="给电脑上生成SSH KEY"></li></ul><ol start="3"><li>打开电脑，可以看到电脑上生成了两个秘钥，秘钥生成算法为RSA算法，第一个文件是私钥，自己保留，不能给旁人知道，下面一个pub文件是公钥，大家都可以知晓。<br><img src="/2019/01/09/更换电脑的博客问题/电脑生成公私钥.jpg" alt="电脑生成公私钥"></li><li>打开公钥文件，复制添加到GitHub官网上。<br><img src="/2019/01/09/更换电脑的博客问题/github官网上添加新的SSH KEY.jpg" alt="github官网上添加新的SSH KEY"></li><li>配置结束后，测试配置是否成功。<br><img src="/2019/01/09/更换电脑的博客问题/测试新的SSH KEY配置是否成功.jpg" alt="测试新的SSH KEY配置是否成功"><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1>&emsp;&emsp;当能够看到这篇博客时说明我已经成功了，在我打字时刻内心依然非常欣喜，在这不断探索不断修改直至看到效果的过程中，我备受鼓舞，想起一年多前一位大神学长曾经教导的话，做技术做学问要脚踏实地，我走着他经历过的路，遵循着他说过的话，不断去踩坑。很多事情其实很明了，坑都是自己挖的却还未看透继续在捯饬着，比如，在做完这一切配置后，我这篇博客在首次发布的时候图片不显示了，检查好几遍都没什么问题，最后的最后发现图片前面的感叹号!是中文模式下输入的……</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;公司新发了一台笔记本，以往我还是使用自己的笔记本，某天，钟老师说：“你怎么不带公司发的笔记本，是不是嫌弃它比你的重？
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
